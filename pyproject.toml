[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[pydocstyle]
convention = "google"


[tool.bandit.assert_used]
skips = ["**/test_*.py"]


[tool.black]
line-length = 79


[tool.isort]
profile = "black"
line_length = 79


[tool.poetry]
name = "reverse_argparse"
version = "1.0.4"
license = "LICENSE.md"
readme = "README.md"
keywords = ["argparse", "argument", "parse", "parsing", "command line"]
repository = "https://github.com/sandialabs/reverse_argparse"
description = "Generate the effective command line invocation for a script."
documentation = "https://reverse-argparse.readthedocs.io"
authors = [
    "Jason M. Gates <jmgate@sandia.gov>"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: User Interfaces",
    "Typing :: Typed",
]


[tool.poetry.urls]
CI = "https://github.com/sandialabs/reverse_argparse/actions"
Issues = "https://github.com/sandialabs/reverse_argparse/issues"


[tool.poetry.dependencies]
python = ">=3.8"


[tool.poetry.dev-dependencies]
# At some point, convert from the various requirements.txt files to this
# list of Poetry development dependencies.


[tool.semantic_release]
build_command = "python3 -m pip install poetry && poetry build"
commit_message = """
chore: Release v{version}

Automatically generated by python-semantic-release."""
version_variables = [
    "doc/source/conf.py:version",
    "reverse_argparse/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version",
]


[tool.semantic_release.branches.master]
match = "master"


[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "Merge pull request",
]


[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"
